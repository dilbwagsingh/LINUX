1. To update pip3 and pip respectively - 
	
	sudo -H pip3 install --upgrade pip
	sudo -H pip2 install --upgrade pip


GITHUB SECTION -

						    ------------START-------------

2. To save github credentials for a particular project so that you dont have to give the
   username and pass everytime you make a push-
	
		git config credential.helper store

	Note- This stores the password in plaintext format and so is just protected by the 
		  file system permissions.


3. To keep your forked repo uptodate with the original repo on GitHub-
	
	Inside the Cloned repo in your local workstation-
	1. git remote add upstream git://github.com/ORIGINAL-DEV-USERNAME/REPO-YOU-FORKED-FROM.git
	2. git fetch upstream
	3. git pull upstream master (If a text editor pops up just exit it)
	4. git push

4. If you ever create a project then then plan to add it to a repository follow these-

	1. Create a repo in GitHub and copy the repo link.
	2. Go to the project folder in your local system from the terminal type the following commands-

			1. git init (This initialises the local folder as a .git directory that basically tells your system 
			   that this is a GitHub project)
			2. git remote add origin YOUR-REPO-LINK-THAT-YOU-COPIED (Tells git where to upload files)
			3. git config --global user.name "YOUR-GITHUB-NAME"									
			4. git config --global user.email "YOUR-EMAIL-ASSOCIATED-WITH-YOUR-GITHUB-ACCOUNT"	
				(4 and 5 set up your identity globally for all the future github hosted projects. 
				If you want to setup your identity for the current project just remove the "--global" flag)
			5. git pull origin master (This is to make the local project folder even with the repo 
			   you just created online)
			6. git branch --set-upstream-to = origin/master (Tells github that master is the branch to 
			   perform pull from and push to)
				(At this point you have the repository setup)
			7. git status (This checks for the evenness of the local files with the repo online)
			8. git add -A ("-A" flag is to add all files that are changed to be ready to be pushed)
			9. git commit -m "COMMIT-MESSAGE"
			10. git push (since we had setup the origin master before so we dont need to specify origin master)
			 	(Now it will prompt for your username and password, type those in correctly and you are done!!)

5. If you want to delete files or directories from the repo - 
		
		git rm FILE/FOLDER-NAME-YOU-WANT-TO-DELETE


6. If you donot want to include a particular file or folder in your repo just add it to the .gitignore file
		
		git-ignore FILE/FOLDER-NAME-YOU-WANT-TO-IGNORE


							------------------END------------------


7. Run previous command on terminal with an added word-
			
			example : previous command - apt-get install python
					   now type - sudo !! (To run previous command with sudo priviledges)


8. Adding a user to the sudoers list/some group-
		
		I have found 3 different commands which i guess basically do ths same task if not something more-
			1. sudo adduser USERNAME-YOU-WANT-TO-ADD-TO-SUDOERS-LIST sudo(or GROUP-NAME)
			2. sudo gpasswd -a USERNAME-YOU-WANT-TO-ADD-TO-SUDOERS-LIST sudo(or GROUP-NAME)
			3. sudo usermod -a -G sudo(or GROUP-NAME) USERNAME-YOU-WANT-TO-ADD-TO-SUDOERS-LIST

		A good reading - https://www.lifewire.com/add-user-to-sudoers-in-ubuntu-4129177

9. Removing a user from the sudoers list/some group-
		
		sudo gpasswd -d USERNAME-YOU-WANT-TO-ADD-TO-SUDOERS-LIST sudo(or GROUP-NAME)


10. To access root user in UBUNTU (which is disabled by default)
		
		sudo su (Note : 'su -l' will not work in this case because you donot know the root password in UBUNTU)


11.  Some useful terminal shortcuts(Defaults)
		Ctrl+A 		- 		Move the cursor to the beginning of the command
		Ctrl+E 		-		Move the cursor to the end of the command.
		Ctrl+L 		-		Clear the terminal.
		Tab Tab 	- 		Shows command completion possibilities
		Ctrl+R 		- 		Seacrch command history.


12.	 Symbolic links in linux-
		
		Just like shortcuts in windows we have something similar if not same in linux called Symbolic links. 
		They are usually very small files.

		To create a symbolic link in the pwd-
			ln -s ADDRESS-OF-THE-TARGET NAME-OF-THE-LINK

		If the symbolic link is not broken then it is default colored cyan else red in the terminal.


13.	Check the type of command- 
		
		type COMMAND-NAME
		Example : type cd

		Note - This is useful as you will notice that shell built-in command like cd dont work with "sudo".

14.